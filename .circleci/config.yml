# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  # Exercise 25 - Rollback
  destroy_environment:
    steps:
      - run:
        name: "Destroy Environment"
        when: on_fail
        command: |
          aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} --region ${AWS_DEFAULT_REGION}

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create_infrastructure:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: amazon/aws-cli
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Create Cloudformation Stack"
          command: |
            aws cloudformation deploy --template-file template.yml --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} --region ${AWS_DEFAULT_REGION}

  configure_infrastructure:
    docker:
      - image: python:3.11-rc-alpine
      #- image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["25:f0:61:1c:f2:52:50:d7:88:b5:d0:c2:e9:5d:3a:57"]
      - run:  
          name: "Install Ansible"
          command: |
            apk add --update ansible
      - run:
          name: "Run Ansible Playbook"
          command: |
            ansible-playbook -i inventory main.yml

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: 
          name: "Update curl cmd"
          command: apk add --update curl
      - run:
          name: "Perform Smoke Test"
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL}
            then
              return 0
            else
              return 1
            fi

  ex25_smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          Name: "Ex25 Smoke Test"  
          # Perform intentional failure
          command: return 1
      - destroy_environment

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      - create_infrastructure
      ##- configure_infrastructure
      ##- smoke_test
      - ex25_smoke_test